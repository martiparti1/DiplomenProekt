@model IEnumerable<GameWorld.Models.Product.ProductIndexVM>
@using GameWorld.Models.Order
@*
    @{
        ViewData["Title"] = "Index";
    }

    <h1>Index</h1>

    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
    <form asp-controller="Product" asp-action="Index" method="get">
        <p>
            Maker: <input type="text" name="searchStringMakerName" />
            Category: <input type="text" name="searchStringCategoryName" />
            <input type="submit" value="Filter" />
        </p>
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.MakerName)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.CategoryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Image)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Platform)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Discount)
                </th>
                @if (this.User.Identity.IsAuthenticated)
                {
                    <th>Order</th>
                }
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.MakerName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.CategoryName)
                    </td>
                    <td>
                        <img src="@Html.DisplayFor(modelItem => item.Image)" alt="Image" width="100" />
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Platform)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Discount)%
                    </td>
                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <td>
                            @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
                       { ProductId = item.Id })
                        </td>
                    }
                    <td>
                        @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        }|
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                        {
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
    @section Scripts{
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }*@

@*<style>
    .product-image {
        width: 100%;
        height: 300px;
        object-fit: contain;
    }
    .add-to-cart {
        position: absolute;
        bottom: 0;
    }
</style>*@

@if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
{
    <p>
        <a asp-action="Create" class="btn btn-success btn-sm">Add a Product</a>
    </p>
}


<div class="row">


    @foreach (var item in Model)
    {
        <div class="col-md-4 mb-5">
            <div class="card h-100">
                <img src="@item.Image" class="card-img-top product-image" alt="@item.ProductName">
                <div class="card-body">
                    <h5 class="card-title">@item.ProductName</h5>
                    <p class="card-text">@item.Description</p>
                    <div class="mt-auto">
                        <p class="card-text"><strong>Price: </strong>@item.Price</p>
                        <a href="#" class="btn btn-primary">Add to Cart</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                    </div>
                </div>
            </div>
        </div>


    }
</div>



